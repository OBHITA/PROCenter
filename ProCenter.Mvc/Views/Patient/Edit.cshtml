@using ProCenter.Mvc.Infrastructure.Extension
@using ProCenter.Service.Message.Patient
@using ProCenter.Service.Message.Security
@using Pillar.Common.Utility
@model PatientDto

@{
    var disable = !Html.CanAccess("Patient", "Edit", "POST") ? "true" : "false";

    ViewBag.Title = "Edit Patient";
}

<div class="patient-editor dashboard-wrapper" data-disabled="@disable">
    <div class="editor-content container-fluid" data-layout-height="*">
        <form>
            <div class="questions">
                <fieldset class="patient-information" data-ajax-container="true">
                    <legend>Patient Information</legend>
                    @Html.ValidationSummary(true, "Update failed. Please correct the following errors.")
                    @foreach (var property in @Html.GetPropertiesToRender())
                    {
                        <div class="question-root @property.PropertyName">
                            <div>
                                @Html.Label(property.PropertyName)
                            </div>
                            <div>
                                @if (Html.IsLookupProperty(property))
                                {
                                    var lookupCategory = Html.GetLookupCategory(property.PropertyName);
                                    @Html.Editor(property.PropertyName, new { LookupItems = Html.GetLookupOptionsForCategory(lookupCategory), LookupCategory = lookupCategory })
                                }
                                else if (property.PropertyName == "UniqueIdentifier")
                                {
                                     @Html.Display(property.PropertyName)
                                }
                                else
                                {
                                    var propertyName = property.PropertyName;
                                    @Html.Editor(propertyName)
                                    @Html.ValidationMessage(propertyName)
                                }
                                <div class="ajax-loading-indicator"><span>Saving...</span></div>
                                <div class="clear"></div>
                            </div>

                        </div>
                    }
                    <div class="clear">
                    </div>
                </fieldset>
                <fieldset>
                    <legend>Assign to a Team</legend>
                    <div class="teams">
                        <input type="text" placeholder="Search" data-control="finder" data-ajaxform-ignore="true" data-finder-url="/api/Team/FinderSearch" data-finder-display="Name" />
                        <a class="add-btn btn btn-success" data-icon="&#xe102;" disabled="disabled"></a>
                        <div>
                            <ul class="current-teams"></ul>
                        </div>
                    </div>
                </fieldset>
                <fieldset>
                    <legend>Login Account</legend>
                    <div class="@PropertyUtil.ExtractPropertyName(() => Model.SystemAccount)">
                        <div id="system-account-content">
                            @if (Model.HasAccount)
                            {
                                @Html.EditorFor(m => m.SystemAccount)
                            }
                            else
                            {
                                <div id="createAccountModal" class="modal hide fade" tabindex="-1" role="dialog" aria-labelledby="createAccountModalLabel" aria-hidden="true">
                                    <form id="createAccountForm">
                                        <div class="modal-header">
                                            <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
                                            <h3 id="createAccountModalLabel">Create Login Account</h3>
                                        </div>
                                        <div class="field-validation-error hidden modal-error">
                                        </div>
                                        <div class="modal-body">
                                            @{
                                var systemAccount = new SystemAccountDto { Username = Model.Name.FirstName.Trim() + "." + Model.Name.LastName.Trim(), Email = Model.Email, CreateNew = true };
                                            }
                                            @Html.EditorFor(m => systemAccount)
                                        </div>
                                        <div class="modal-footer">
                                            <a href="#" class="btn" data-dismiss="modal" aria-hidden="true">Cancel</a>
                                            <a id="create-account-btn" class="btn btn-primary" data-loadelementid="create-account-model-loading" aria-hidden="true">Create</a>
                                        </div>
                                        <div id="create-account-model-loading" class="modal-loading-indicator" style="display: none"></div>
                                    </form>
                                </div>

                                if (Html.CanAccess("Patient", "CreateAccount", "POST"))
                                {
                                <a href="#createAccountModal" class="btn btn-success" data-toggle="modal" data-icon="&#xe102;">Create New Account</a>
                                }
                            }
                        </div>
                    </div>
                </fieldset>
            </div>
        </form>
    </div>
</div>


@section scripts 
{
    @Scripts.Render("~/bundles/patient")
    <noscript>This site contains certain features and services that require javascript in order to function properly. Please enable javascript in your browser and try again.</noscript>
    <script>
        $(document).ready(function () {
            window.procenter.InitializePatient('@Url.Content("~/Patient")', '@Url.Content("~/Team")', '@Url.Content("~/api/Team")');
        });
    </script>
    <noscript>This site contains certain features and services that require javascript in order to function properly. Please enable javascript in your browser and try again.</noscript>
}